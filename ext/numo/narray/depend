TAGSRC = \
 ../../ruby/include/ruby/*.h \
 ../../ruby/*.c \
 *.h \
 types/*.h \
 *.c \
 types/*.c

tags : TAGS
TAGS : $(TAGSRC)
	etags $(TAGSRC)

doc :
	yard doc *.c types/*.c

C_TMPL = gen/tmpl/lib.c gen/tmpl/seq.c gen/tmpl/fill.c gen/tmpl/powint.c gen/tmpl/new_dim0.c gen/tmpl/coerce_cast.c gen/tmpl/eye.c gen/tmpl/format_to_a.c gen/tmpl/set2.c gen/tmpl/poly.c gen/tmpl/rand_norm.c gen/tmpl/store_numeric.c gen/tmpl/extract.c gen/tmpl/class.c gen/tmpl/map_with_index.c gen/tmpl/unary.c gen/tmpl/binary_s.c gen/tmpl/cond_unary.c gen/tmpl/unary_ret2.c gen/tmpl/minmax.c gen/tmpl/store_array.c gen/tmpl/qsort.c gen/tmpl/module.c gen/tmpl/format.c gen/tmpl/aset.c gen/tmpl/alloc_func.c gen/tmpl/unary2.c gen/tmpl/each.c gen/tmpl/accum_index.c gen/tmpl/pow.c gen/tmpl/accum.c gen/tmpl/store.c gen/tmpl/cast_array.c gen/tmpl/store_bit.c gen/tmpl/binary2.c gen/tmpl/cum.c gen/tmpl/rand.c gen/tmpl/inspect.c gen/tmpl/unary_s.c gen/tmpl/to_a.c gen/tmpl/sort_index.c gen/tmpl/logseq.c gen/tmpl/init_module.c gen/tmpl/binary.c gen/tmpl/sort.c gen/tmpl/frexp.c gen/tmpl/clip.c gen/tmpl/median.c gen/tmpl/extract_data.c gen/tmpl/each_with_index.c gen/tmpl/allocate.c gen/tmpl/aref.c gen/tmpl/store_from.c gen/tmpl/cond_binary.c gen/tmpl/accum_binary.c gen/tmpl/init_class.c gen/tmpl/cast.c gen/tmpl/bincount.c gen/tmpl_bit/where.c gen/tmpl_bit/fill.c gen/tmpl_bit/format_to_a.c gen/tmpl_bit/extract.c gen/tmpl_bit/unary.c gen/tmpl_bit/where2.c gen/tmpl_bit/store_array.c gen/tmpl_bit/format.c gen/tmpl_bit/aset.c gen/tmpl_bit/each.c gen/tmpl_bit/bit_count.c gen/tmpl_bit/store_bit.c gen/tmpl_bit/none_p.c gen/tmpl_bit/mask.c gen/tmpl_bit/inspect.c gen/tmpl_bit/to_a.c gen/tmpl_bit/binary.c gen/tmpl_bit/bit_reduce.c gen/tmpl_bit/each_with_index.c gen/tmpl_bit/allocate.c gen/tmpl_bit/aref.c gen/tmpl_bit/store_from.c

COGEN = gen/cogen.rb
DEPENDS = $(C_TMPL) gen/*.rb


types/uint32.c: gen/def/uint32.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/uint32.rb

types/sfloat.c: gen/def/sfloat.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/sfloat.rb

types/int64.c: gen/def/int64.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/int64.rb

types/dcomplex.c: gen/def/dcomplex.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/dcomplex.rb

types/uint8.c: gen/def/uint8.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/uint8.rb

types/int32.c: gen/def/int32.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/int32.rb

types/int16.c: gen/def/int16.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/int16.rb

types/bit.c: gen/def/bit.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/bit.rb

types/uint64.c: gen/def/uint64.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/uint64.rb

types/int8.c: gen/def/int8.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/int8.rb

types/scomplex.c: gen/def/scomplex.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/scomplex.rb

types/robject.c: gen/def/robject.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/robject.rb

types/uint16.c: gen/def/uint16.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/uint16.rb

types/dfloat.c: gen/def/dfloat.rb $(DEPENDS)
	$(MAKEDIRS) $(@D) types
	ruby $(COGEN) -l -o $@ gen/def/dfloat.rb


src : types/uint32.c types/sfloat.c types/int64.c types/dcomplex.c types/uint8.c types/int32.c types/int16.c types/bit.c types/uint64.c types/int8.c types/scomplex.c types/robject.c types/uint16.c types/dfloat.c

CLEANOBJS = *.o */*.o *.bak types/*.c
